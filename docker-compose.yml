# Use root/example as user/password credentials
version: '3.9'

services:
  mongodb:
    image: docker.io/bitnami/mongodb:${MONGO_VERSION}
    container_name: mongodb
    restart: always
    environment:
      MONGODB_ROOT_USER: ${MONGO_ROOT_USERNAME}
      MONGODB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
    volumes:
      - 'mongodb_master_data:/bitnami/mongodb'
      - ./docker-entrypoint-initdb.d/mongo-createdb-init.js:/docker-entrypoint-initdb.d/mongo-createdb-init.js:ro
    ports:
      - ${MONGO_HOST_PORT:-27017}:27017
    networks:
      - gallerybox-network

  mongo-express:
    container_name: mongocli
    image: mongo-express:${MONGOEXPRESS_VERSION}
    restart: always
    depends_on: 
      - mongodb
    ports:
      - ${MONGOEXPRESS_HOST_PORT:-5000}:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@${MONGO_HOST}:${MONGO_HOST_PORT}/
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGOEXPRESS_LOGIN}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGOEXPRESS_PASSWORD}
    networks:
      - gallerybox-network

  # Se crear√° una API por cada microservicio (cambiando el puerto de debugging)
  backend:
    container_name: backend
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./Dockerfile
      target: production           # Solo construye (build) la etapa development del Dockerfile
      args: 
        - NODE_VERSION=${NODE_VERSION}
    # Run in Debug Mode: npm run start:debug
    # Run in Dev Mode:   npm run start:dev
    command: npm run start:debug    
    ports:
      - ${NESTJS_PORT:-3000}:3000
      - ${NESTJS_DEBUG_PORT:-9229}:9229                   # Debugging port
    volumes:
      - .:/usr/src/app
      - ./node_modules:/usr/src/app/node_modules
    networks:
      - gallerybox-network

volumes:
  mongodb_master_data:

networks:
  gallerybox-network:
    name: gallerybox-network